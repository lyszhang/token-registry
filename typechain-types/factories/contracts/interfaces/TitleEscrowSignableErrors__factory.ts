/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  TitleEscrowSignableErrors,
  TitleEscrowSignableErrorsInterface,
} from "../../../contracts/interfaces/TitleEscrowSignableErrors";

const _abi = [
  {
    inputs: [],
    name: "CallerNotEndorser",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEndorsement",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "endorsedBeneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "currentBeneficiary",
        type: "address",
      },
    ],
    name: "MismatchedEndorsedBeneficiaryAndCurrentBeneficiary",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "endorsedNominee",
        type: "address",
      },
      {
        internalType: "address",
        name: "onChainNominee",
        type: "address",
      },
    ],
    name: "MismatchedEndorsedNomineeAndOnChainNominee",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentTimestamp",
        type: "uint256",
      },
    ],
    name: "SignatureExpired",
    type: "error",
  },
];

export class TitleEscrowSignableErrors__factory {
  static readonly abi = _abi;
  static createInterface(): TitleEscrowSignableErrorsInterface {
    return new utils.Interface(_abi) as TitleEscrowSignableErrorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TitleEscrowSignableErrors {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TitleEscrowSignableErrors;
  }
}
