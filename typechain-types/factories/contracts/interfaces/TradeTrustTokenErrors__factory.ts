/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  TradeTrustTokenErrors,
  TradeTrustTokenErrorsInterface,
} from "../../../contracts/interfaces/TradeTrustTokenErrors";

const _abi = [
  {
    inputs: [],
    name: "InvalidTokenId",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenExists",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotSurrendered",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailure",
    type: "error",
  },
];

export class TradeTrustTokenErrors__factory {
  static readonly abi = _abi;
  static createInterface(): TradeTrustTokenErrorsInterface {
    return new utils.Interface(_abi) as TradeTrustTokenErrorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TradeTrustTokenErrors {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TradeTrustTokenErrors;
  }
}
