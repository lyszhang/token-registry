/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TitleEscrowFactoryCallerMock,
  TitleEscrowFactoryCallerMockInterface,
} from "../../../contracts/mocks/TitleEscrowFactoryCallerMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "titleEscrowFactory",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "callCreate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610248806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80637cf99ced14610030575b600080fd5b61004a60048036038101906100459190610166565b61004c565b005b8173ffffffffffffffffffffffffffffffffffffffff1663780900dc826040518263ffffffff1660e01b815260040161008591906101b5565b6020604051808303816000875af11580156100a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c891906101e5565b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100fd826100d2565b9050919050565b61010d816100f2565b811461011857600080fd5b50565b60008135905061012a81610104565b92915050565b6000819050919050565b61014381610130565b811461014e57600080fd5b50565b6000813590506101608161013a565b92915050565b6000806040838503121561017d5761017c6100cd565b5b600061018b8582860161011b565b925050602061019c85828601610151565b9150509250929050565b6101af81610130565b82525050565b60006020820190506101ca60008301846101a6565b92915050565b6000815190506101df81610104565b92915050565b6000602082840312156101fb576101fa6100cd565b5b6000610209848285016101d0565b9150509291505056fea264697066735822122092f9a45288140db0dea419ad38f82559d0106dd8684e53b0bdec85dff782d93e64736f6c63430008110033";

type TitleEscrowFactoryCallerMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TitleEscrowFactoryCallerMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TitleEscrowFactoryCallerMock__factory extends ContractFactory {
  constructor(...args: TitleEscrowFactoryCallerMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TitleEscrowFactoryCallerMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<TitleEscrowFactoryCallerMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TitleEscrowFactoryCallerMock {
    return super.attach(address) as TitleEscrowFactoryCallerMock;
  }
  override connect(signer: Signer): TitleEscrowFactoryCallerMock__factory {
    return super.connect(signer) as TitleEscrowFactoryCallerMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TitleEscrowFactoryCallerMockInterface {
    return new utils.Interface(_abi) as TitleEscrowFactoryCallerMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TitleEscrowFactoryCallerMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TitleEscrowFactoryCallerMock;
  }
}
