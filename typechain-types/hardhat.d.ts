/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlUpgradeable__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC1822ProxiableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822ProxiableUpgradeable__factory>;
    getContractFactory(
      name: "IBeaconUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeaconUpgradeable__factory>;
    getContractFactory(
      name: "ERC1967UpgradeUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967UpgradeUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "RegistryAccess",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RegistryAccess__factory>;
    getContractFactory(
      name: "SBTUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SBTUpgradeable__factory>;
    getContractFactory(
      name: "TradeTrustSBT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TradeTrustSBT__factory>;
    getContractFactory(
      name: "TradeTrustTokenBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TradeTrustTokenBase__factory>;
    getContractFactory(
      name: "TradeTrustTokenBaseURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TradeTrustTokenBaseURI__factory>;
    getContractFactory(
      name: "TradeTrustTokenBurnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TradeTrustTokenBurnable__factory>;
    getContractFactory(
      name: "TradeTrustTokenMintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TradeTrustTokenMintable__factory>;
    getContractFactory(
      name: "TradeTrustTokenRestorable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TradeTrustTokenRestorable__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "ISBTUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISBTUpgradeable__factory>;
    getContractFactory(
      name: "ITitleEscrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITitleEscrow__factory>;
    getContractFactory(
      name: "ITitleEscrowFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITitleEscrowFactory__factory>;
    getContractFactory(
      name: "ITitleEscrowSignable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITitleEscrowSignable__factory>;
    getContractFactory(
      name: "ITradeTrustSBT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITradeTrustSBT__factory>;
    getContractFactory(
      name: "ITradeTrustToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITradeTrustToken__factory>;
    getContractFactory(
      name: "ITradeTrustTokenBurnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITradeTrustTokenBurnable__factory>;
    getContractFactory(
      name: "ITradeTrustTokenMintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITradeTrustTokenMintable__factory>;
    getContractFactory(
      name: "ITradeTrustTokenRestorable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITradeTrustTokenRestorable__factory>;
    getContractFactory(
      name: "RegistryAccessErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RegistryAccessErrors__factory>;
    getContractFactory(
      name: "SigHelperErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SigHelperErrors__factory>;
    getContractFactory(
      name: "TDocDeployerErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TDocDeployerErrors__factory>;
    getContractFactory(
      name: "TitleEscrowErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TitleEscrowErrors__factory>;
    getContractFactory(
      name: "TitleEscrowFactoryErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TitleEscrowFactoryErrors__factory>;
    getContractFactory(
      name: "TitleEscrowSignableErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TitleEscrowSignableErrors__factory>;
    getContractFactory(
      name: "TradeTrustTokenErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TradeTrustTokenErrors__factory>;
    getContractFactory(
      name: "ERC721ReceiverMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ReceiverMock__factory>;
    getContractFactory(
      name: "SBTUpgradeableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SBTUpgradeableMock__factory>;
    getContractFactory(
      name: "SigHelperMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SigHelperMock__factory>;
    getContractFactory(
      name: "TitleEscrowFactoryCallerMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TitleEscrowFactoryCallerMock__factory>;
    getContractFactory(
      name: "TradeTrustTokenMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TradeTrustTokenMock__factory>;
    getContractFactory(
      name: "TitleEscrowSignable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TitleEscrowSignable__factory>;
    getContractFactory(
      name: "TradeTrustTokenStandard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TradeTrustTokenStandard__factory>;
    getContractFactory(
      name: "TitleEscrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TitleEscrow__factory>;
    getContractFactory(
      name: "TitleEscrowFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TitleEscrowFactory__factory>;
    getContractFactory(
      name: "TradeTrustToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TradeTrustToken__factory>;
    getContractFactory(
      name: "SigHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SigHelper__factory>;
    getContractFactory(
      name: "TDocDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TDocDeployer__factory>;

    getContractAt(
      name: "AccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "IAccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlUpgradeable>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "IERC1822ProxiableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822ProxiableUpgradeable>;
    getContractAt(
      name: "IBeaconUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeaconUpgradeable>;
    getContractAt(
      name: "ERC1967UpgradeUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967UpgradeUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "PausableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "RegistryAccess",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RegistryAccess>;
    getContractAt(
      name: "SBTUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SBTUpgradeable>;
    getContractAt(
      name: "TradeTrustSBT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TradeTrustSBT>;
    getContractAt(
      name: "TradeTrustTokenBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TradeTrustTokenBase>;
    getContractAt(
      name: "TradeTrustTokenBaseURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TradeTrustTokenBaseURI>;
    getContractAt(
      name: "TradeTrustTokenBurnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TradeTrustTokenBurnable>;
    getContractAt(
      name: "TradeTrustTokenMintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TradeTrustTokenMintable>;
    getContractAt(
      name: "TradeTrustTokenRestorable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TradeTrustTokenRestorable>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "ISBTUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISBTUpgradeable>;
    getContractAt(
      name: "ITitleEscrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITitleEscrow>;
    getContractAt(
      name: "ITitleEscrowFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITitleEscrowFactory>;
    getContractAt(
      name: "ITitleEscrowSignable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITitleEscrowSignable>;
    getContractAt(
      name: "ITradeTrustSBT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITradeTrustSBT>;
    getContractAt(
      name: "ITradeTrustToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITradeTrustToken>;
    getContractAt(
      name: "ITradeTrustTokenBurnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITradeTrustTokenBurnable>;
    getContractAt(
      name: "ITradeTrustTokenMintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITradeTrustTokenMintable>;
    getContractAt(
      name: "ITradeTrustTokenRestorable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITradeTrustTokenRestorable>;
    getContractAt(
      name: "RegistryAccessErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RegistryAccessErrors>;
    getContractAt(
      name: "SigHelperErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SigHelperErrors>;
    getContractAt(
      name: "TDocDeployerErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TDocDeployerErrors>;
    getContractAt(
      name: "TitleEscrowErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TitleEscrowErrors>;
    getContractAt(
      name: "TitleEscrowFactoryErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TitleEscrowFactoryErrors>;
    getContractAt(
      name: "TitleEscrowSignableErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TitleEscrowSignableErrors>;
    getContractAt(
      name: "TradeTrustTokenErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TradeTrustTokenErrors>;
    getContractAt(
      name: "ERC721ReceiverMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ReceiverMock>;
    getContractAt(
      name: "SBTUpgradeableMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SBTUpgradeableMock>;
    getContractAt(
      name: "SigHelperMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SigHelperMock>;
    getContractAt(
      name: "TitleEscrowFactoryCallerMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TitleEscrowFactoryCallerMock>;
    getContractAt(
      name: "TradeTrustTokenMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TradeTrustTokenMock>;
    getContractAt(
      name: "TitleEscrowSignable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TitleEscrowSignable>;
    getContractAt(
      name: "TradeTrustTokenStandard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TradeTrustTokenStandard>;
    getContractAt(
      name: "TitleEscrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TitleEscrow>;
    getContractAt(
      name: "TitleEscrowFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TitleEscrowFactory>;
    getContractAt(
      name: "TradeTrustToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TradeTrustToken>;
    getContractAt(
      name: "SigHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SigHelper>;
    getContractAt(
      name: "TDocDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TDocDeployer>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
